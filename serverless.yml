service: serverless-feedback-api
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.16.1
  region: sa-east-1
  stage: dev
  environment:
    FEEDBACK_TABLE: ${self:service}-${self:provider.stage}-table
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.FEEDBACK_TABLE}

plugins:
  - serverless-offline
  - serverless-plugin-typescript

package:
  individually: true
  patterns:
    - '!node_modules/**'
    - '!tests/**'

functions:
  createFeedback:
    handler: src/handlers/createFeedback.handler
    events:
      - http:
          path: feedback
          method: post
          cors: true

  listFeedbacks:
    handler: src/handlers/listFeedbacks.handler
    events:
      - http:
          path: feedback
          method: get
          cors: true

resources:
  Resources:
    FeedbackTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.FEEDBACK_TABLE}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

functions:
  createFeedback:
    handler: src/handlers/createFeedback.handler
    events:
      - http:
          path: feedback
          method: post
          cors: true

  listFeedbacks:
    handler: src/handlers/listFeedbacks.handler
    events:
      - http:
          path: feedback
          method: get
          cors: true
